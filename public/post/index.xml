<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 신규하 블로그</title>
    <link>https://gyuha.github.io/post/</link>
    <description>Recent content in Posts on 신규하 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 19 Apr 2020 03:50:46 +0900</lastBuildDate>
    
	<atom:link href="https://gyuha.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vscode에서 vue 프로젝트 생성시 ESlint와 Prettier 설정해 주기</title>
      <link>https://gyuha.github.io/post/2020-04-19-vue-typescript-eslint/</link>
      <pubDate>Sun, 19 Apr 2020 03:50:46 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2020-04-19-vue-typescript-eslint/</guid>
      <description>&lt;h2 id=&#34;vue-프로젝트-생성하기&#34;&gt;Vue 프로젝트 생성하기&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://gyuha.github.io/img/2020-04-19-vue-typescript-eslint/vscode-vue.jpg&#34; alt=&#34;vscode-vue&#34;&gt;&lt;/p&gt;
&lt;p&gt;기존에 사용하던 &lt;a href=&#34;https://www.npmjs.com/package/tslint&#34;&gt;TSLint가 더이상 지원&lt;/a&gt;을 받지 못 하게 되면서, ESlint로 넘어가야 상태가 되었습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>자바스크립트 배열 메서드 정리</title>
      <link>https://gyuha.github.io/post/2020-03-15-javascript-arrary/</link>
      <pubDate>Sun, 15 Mar 2020 21:39:55 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2020-03-15-javascript-arrary/</guid>
      <description>&lt;p&gt;자바스크립트의 배열을 메서드를 정리해 봅니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>윈도우용 패키지 매니저 Chocolatey 사용법</title>
      <link>https://gyuha.github.io/post/2020-01-10-chocolatey_manual/</link>
      <pubDate>Fri, 10 Jan 2020 03:03:39 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2020-01-10-chocolatey_manual/</guid>
      <description>&lt;p&gt;Chocolatey는 윈도우용 패키지 매니저로, 설치하려는 윈도우용 소프트웨어를 일일이 웹사이트에서 찾아서 설치할 필요 없이 간단하게 커맨드 만으로 윈도우용 소프트웨어를 설치 할 수 있게 해 줍니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Typescript에서 default import 개선..</title>
      <link>https://gyuha.github.io/post/2019-12-19-typescript-default-import/</link>
      <pubDate>Thu, 19 Dec 2019 21:32:11 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2019-12-19-typescript-default-import/</guid>
      <description>&lt;p&gt;express를 import하면 아래와 같이 import 했을 겁니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VSCode에 live2d 사용하기</title>
      <link>https://gyuha.github.io/post/2019-01-22-vscode-live2d/</link>
      <pubDate>Tue, 22 Jan 2019 23:42:22 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2019-01-22-vscode-live2d/</guid>
      <description>&lt;p&gt;먼저 띄운 화면을 보고 가시죠~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>우분투 18.04에서 kimchi 설치 하기</title>
      <link>https://gyuha.github.io/post/2019-01-04-ubuntu-1804-kimchi-install/</link>
      <pubDate>Fri, 04 Jan 2019 17:04:32 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2019-01-04-ubuntu-1804-kimchi-install/</guid>
      <description>Bridge Network 설치하기 전 kvm을 개발로 쓰면서 bridge network 형태로 자주 사용해서 먼저 bridge network를 설정 해 줍니다.
kimchi를 설치 이후에 설정으로 추가해 주면&amp;hellip; 문제가 발생하면서 네트워크가 불능이 되어 버립니다.
그래서 미리 설정을 해 줍니다.
먼저 bridge-utils를 설치 해 줍니다.
sudo apt install bridge-utils 그리고, /etc/netplan/50-cloud-init.yaml을 수정해 줍니다.
sudo vi /etc/netplan/50-cloud-init.yaml 아래와 같이 입력 합니다.
network: ethernets: enp3s0: dhcp4: false bridges: br0: interfaces: - enp3s0 dhcp4: false addresses: - 192.168.1.200/24 gateway4: 192.</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04에서 netplan을 사용한 static ip 설정</title>
      <link>https://gyuha.github.io/post/2019-01-04-ubuntu-1804-static-ip/</link>
      <pubDate>Fri, 04 Jan 2019 10:30:30 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2019-01-04-ubuntu-1804-static-ip/</guid>
      <description>&lt;p&gt;17.10부터 네트워크 인터페이스 설정이 &lt;code&gt;netplan&lt;/code&gt;이라는 새로운 네트워크 설정이 생겼다. 기존에 인터페이스 설정(/etc/network/interfaces)보다는 간결해 보입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>우분투 노트북 서버 사용시 커버를 덮어도 잠들지 않도록 하기</title>
      <link>https://gyuha.github.io/post/2019-01-04-ubuntu-server-labtop-cover/</link>
      <pubDate>Fri, 04 Jan 2019 10:23:04 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2019-01-04-ubuntu-server-labtop-cover/</guid>
      <description>&lt;p&gt;먼저 터미널에서 아래와 같은 파일을 열어 줍니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows 10 subsystem Ubuntu에서 ssh 설치 하기</title>
      <link>https://gyuha.github.io/post/2018-11-23-windows10-subsystem-openssh/</link>
      <pubDate>Fri, 23 Nov 2018 10:19:45 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2018-11-23-windows10-subsystem-openssh/</guid>
      <description>&lt;p&gt;먼저 기존에 설치된 openssh를 삭제하고 다시 설치해야 합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Express Typescript Webpack</title>
      <link>https://gyuha.github.io/post/2018-11-13-express-typescript-webpack/</link>
      <pubDate>Tue, 13 Nov 2018 23:11:37 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2018-11-13-express-typescript-webpack/</guid>
      <description>&lt;p&gt;express를 타입스크립트롤 시작하는 방법을 설명합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo를 사용한 Github 블로그..</title>
      <link>https://gyuha.github.io/post/2018-11-07-hugo-github/</link>
      <pubDate>Wed, 07 Nov 2018 00:20:56 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2018-11-07-hugo-github/</guid>
      <description>&lt;h2 id=&#34;hugo-설치-하기&#34;&gt;hugo 설치 하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;를 보고 하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Typescript Webpack Serverless 구성하기</title>
      <link>https://gyuha.github.io/post/2018-11-06-typescript-webpack-serverless/</link>
      <pubDate>Tue, 06 Nov 2018 18:29:07 +0900</pubDate>
      
      <guid>https://gyuha.github.io/post/2018-11-06-typescript-webpack-serverless/</guid>
      <description>&lt;p&gt;serverless에서 webpack을 이용해서 typescript를 구성해 보면서 작업 하던걸 기록 해 둡니다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>